name: Release (PyPI Trusted Publisher)

on:
  push:
    tags:
      - "*"
  workflow_dispatch:

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    name: Build dists
    runs-on: ubuntu-latest
    outputs:
      is_prerelease: ${{ steps.detect.outputs.is_prerelease }}
    steps:
      - uses: actions/checkout@v5

      - name: Setup uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: "3.13"
          enable-cache: true

      - name: Build sdist & wheel
        run: uv build

      - name: Twine check (sanity)
        run: uvx twine check dist/*

      - name: Detect pre-release (a/b/rc)
        id: detect
        shell: bash
        run: |
          TAG="${GITHUB_REF#refs/tags/}"
          VER="${TAG#v}"
          if [[ "$VER" =~ (a|b|rc) ]]; then
            echo "is_prerelease=true" >> "$GITHUB_OUTPUT"
          else
            echo "is_prerelease=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*

  publish-testpypi:
    name: Publish to TestPyPI (pre-releases)
    needs: build
    if: needs.build.outputs.is_prerelease == 'true'
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/project/pytest-assert-type
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: Publish to TestPyPI (OIDC)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          packages-dir: dist/

  publish-pypi:
    name: Publish to PyPI (stable)
    needs: build
    if: needs.build.outputs.is_prerelease == 'false'
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/project/pytest-assert-type
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: Publish to PyPI (OIDC)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/